     |     |         
     |     |     |
_____|_____|_____|_____|_______ ^
     |     |     |     |        | this is max height in which above this all tree cutted and get more than or equal to given wooden length required
     |     |     |     |   |    |
     20    20    17    15   10
 we need 24 length wood so we cut at height 12 from ground so ans is 12
/***********************************HERE IS CODE*****************************************/

#include <iostream>
#include<bits/stdc++.h>
using namespace std;
bool predicateFunction(vector<int> v,int n,int h,int req){
	int sum=0;
	for(int i=0;i<n;i++){
		if(v[i]-h>=0){
			sum+=(v[i]-h);
		
		}
	}
	return sum>=req;
}
int main() {
	// your code goes here
	int n,m;          // N IS NO OF TREES, AND M IS REQUIRED WOODEN LENGTH
	cin>>n>>m;
	vector<int> v;
	int maxHeight=0;
	for(int i=0;i<n;i++){
		int x;
		cin>>x;
	
		v.push_back(x);          // ARRAY OF HEIGHT OF TREES
		maxHeight=max(maxHeight,x);
	}
	int l=0;
	int h=maxHeight;
	int mid=l+(h-l)/2;
	int ans=0;
	while(h-l>1){
		if(predicateFunction(v,n,mid,m)){
			l=mid;
		    ans=mid;
		}
		else{
			h=mid-1;
		}
		mid=l+(h-l)/2;
	}

	cout<<ans;
	return 0;
}
