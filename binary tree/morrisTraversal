//   Time complexity O(n) space complexity O(1)
//   This is inorder morris traversal
//****************************CODE************************


void morishTraversal(TreeNode* root,vector<int> & ans){
       if (root == NULL)
        return;
    TreeNode* pre,*current;
    current = root;
    while (current != NULL) {
 
        if (current->left == NULL) {
            cout << current->val << " ";
            ans.push_back(current->val);
            current = current->right;
        }
        else {
            pre = current->left;
            while (pre->right != NULL
                && pre->right != current)
                pre = pre->right;
            if (pre->right == NULL) {
                pre->right = current;
                current = current->left;
            }
            else {
                pre->right = NULL;
                ans.push_back(current->val);
                current = current->right;
            } 
        }
    } 
}
