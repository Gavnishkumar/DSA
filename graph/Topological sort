Given a Directed Acyclic Graph (DAG) with V vertices and E edges,
Find any Topological Sorting of that Graph.

//********************CODE*******************************//

vector<int> ans;
	
	void dfs(int i,vector<int> adj[],unordered_map<int,bool>& vis){
	    if(vis[i]){
	        return;
	    }
	    vis[i]=true;
	    for(auto it: adj[i]){
	        dfs(it,adj,vis);
	    }
	   
	    ans.push_back(i);
	}
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    unordered_map<int,bool> vis;
	    
	    for(int i=0;i<V;i++){
	        if(!vis[i]){
	            dfs(i,adj,vis);
	        }
	    }
	   reverse(ans.begin(),ans.end());
	   
	    return ans;
	    
	}
