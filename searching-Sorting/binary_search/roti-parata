IEEE is having its AGM next week and the president wants to serve cheese prata after the meeting.
The subcommittee members are asked to go to food connection and get P (P<=1000) pratas packed for the function.
The stall has L cooks (L<=50) and each cook has a rank R (1<=R<=8). A cook with a rank R can cook 1 prata in the
first R minutes 1 more prata in the next 2R minutes, 1 more prata in 3R minutes and so on(he can only cook a complete prata) 
( For example if a cook is ranked 2.. he will cook one prata in 2 minutes one more prata in the next 4 mins an one more in the next 6 minutes 
hence in total 12 minutes he cooks 3 pratas in 13 minutes also he can cook only 3 pratas as he does not have enough time for the 4th prata).
The webmaster wants to know the minimum time to get the order done. Please write a program to help him out.

Input
The first line tells the number of test cases. Each test case consist of 2 lines. In the first line of the test case 
we have P the number of prata ordered. In the next line the first integer denotes the number of cooks L and L integers follow in the
same line each denoting the rank of a cook.

Output
Print an integer which tells the number of minutes needed to get the order done.

/*********************************CODE USING BINARY SEARCH IN SEARCH SPACE****************************************************/


#include <iostream>
using namespace std;
bool ispossible(int rank[],long long int mid,int p,int L){
	 int paratha=0;
	for(int i=0;i<L;i++){
	    long long int time=rank[i];
	    int j=2;
	    while(time<=mid){
	        time+=rank[i]*j;
	         paratha++;
	         j++;
	    }
	    if(paratha>=p){
	    return true;
	}
	}
	return false;
}
int main() {
	// your code goes here
	int t;
	cin>>t;
	while(t--){
		int p;
		cin>>p;
		int L;
		cin>>L;
		int rank[L];
		for(int i=0;i<L;i++){
			cin>>rank[i];
		}
		
		long long int l=0;
		long long int h=100000000;
		long long int mid=0;
		long long int ans=0;
		mid = l+(h-l)/2;
		while(l<=h){
			if(ispossible(rank,mid,p,L)){
				h=mid-1;
				ans=mid;
			}
			else{
				l=mid+1;
			}
			mid=l+(h-l)/2;
		}
		cout<<ans<<endl;
	}
	return 0;
}
