Given a fence with n posts and k colors, find out the number of ways of painting the fence so that 
not more than two consecutive posts have the same colors. Since the answer can be large return it modulo 10^9 + 7.
Example 1:
Input:
N=3,  K=2 
Output: 6
MyApproach
for k=3(R,G,B)
hmm n=2 ke liye nikalenge fir uski madad se n=3 and fir usse n=4 aiese hi krte rhenge
        n=2              |   n=3
same |RR,GG,BB           |n=2 ke diff baale saare 
     |  k=3              | ayenge so 6=(
     |___________________|__________________________
     |RG,RB,BR,BG,GR,GB  | n=2 ke same *(k-1)+ 
diff |   k*(K-1)=6       | n=2 ke diff*(k-1)
     |                   |     =6+12
_______________________________________________________
total         9          |    18
class Solution{
    public:
    int val=0;
    
    long long int solve(int n,int k,vector<long long int> &dp){
       
       if(n==1) return k;
       if(n==2) return val;
       if(dp[n]!=-1) return dp[n];
        return dp[n]=(solve(n-2,k,dp)*(k-1)+solve(n-1,k,dp)*(k-1))%1000000007;
    }
    
    // using tabulation
    
    long long int solveTab(int n,int k,vector<long long int> &dp){
        for(int i=3;i<=n;i++){
            int x=dp[1];
            dp[1]=(dp[0]*(k-1)+dp[1]*(k-1))%1000000007;
            dp[0]=x;
        }
        return dp[1];
    }
    long long countWays(int n, int k){
        // val=k+k*(k-1);
        // vector<long long int> dp(n,-1);
        // return solve(n,k,dp);
        vector<long long int> dp(2);
        dp[0]=k;
        dp[1]=k+k*(k-1);
        if(n==1) return dp[0];
        if(n==2) return dp[1];
        return solveTab(n,k,dp);
        
    }
};
