Given an input stream of N integers. The task is to insert these numbers into a new stream and find the median 
of the stream formed by each insertion of X to the new stream.
Example 1:
Input:
N = 4
X[] = 5,15,1,3
Output:
5
10
5
4
Explanation:Flow in stream : 5, 15, 1, 3 
5 goes to stream --> median 5 (5) 
15 goes to stream --> median 10 (5,15) 
1 goes to stream --> median 5 (5,15,1) 
3 goes to stream --> median 4 (5,15,1 3)

//*********************************CODE*******************************
class Solution
{
    public:
 
    double median=0;
    priority_queue<int> maxheap;
    priority_queue<int,vector<int>,greater<int>>minheap;
    int signum(int a,int b){
        if(a==b) return 0;
        else if(a>b)  return 1;
        else return -1;
    }
    void insertHeap(int &x)
    {
        switch(signum(maxheap.size(),minheap.size())){
            case 0:
                if(x>median){
                    minheap.push(x);
                    median=minheap.top();
                }
                else{
                    maxheap.push(x);
                    median=maxheap.top();
                }
                break;
                
            case 1:
                if(x>median){
                    minheap.push(x);
                    median=(minheap.top()+maxheap.top())/2;
                }
                else{
                    minheap.push(maxheap.top());
                    maxheap.pop();
                    maxheap.push(x);
                    median=(minheap.top()+maxheap.top())/2;
                }
                break;
            case -1:
                if(x>median){
                    maxheap.push(minheap.top());
                    minheap.pop();
                    minheap.push(x);
                    median=(minheap.top()+maxheap.top())/2;
                }
                else{
                    maxheap.push(x);
                    median=(minheap.top()+maxheap.top())/2;
                }
                break;
        }
    }
    
    //Function to balance heaps.
    void balanceHeaps()
    {
        
    }
    
    //Function to return Median.
    double getMedian()
    {
        if(median!=0){
            return median;
        }
    }
};
